# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: macOS-10.14

variables:
  scheme: '\Users\runner\work\1\s\platforms\ios\autosendmsg.xcworkspace\xcshareddata\xcschemes\autosendmsg.xcscheme'
  sdk: 'iphoneos'
  configuration: 'Release'
  
steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

- script: |
    npm install -g @ionic/cli
  displayName: 'ionic install'

- script: |
    npm install cordova@9 -g
  displayName: 'cordova install'

# - task: Cache@2
#   inputs:
#     key: 'npm | "$(Agent.OS)" | package-lock.json'
#     restoreKeys: |
#        npm | "$(Agent.OS)"
#     path: $(npm_config_cache)
#   displayName: Cache npm

# - script: npm ci
#   displayName: 'npm ci'


- script: |
     ionic cordova build ios --release --prod
  displayName: 'build ios'



- task: Xcode@5
  inputs:
    sdk: '$(sdk)'
    scheme: '$(scheme)'
    xcWorkspacePath: '\Users\runner\work\1\s\platforms\ios\autosendmsg.xcworkspace'
    configuration: '$(configuration)'
    xcodeVersion: 'default' # Options: default, 10, 9, 8, specifyPath
    exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    packageApp: false

# - task: AndroidSigning@3
#   inputs:
#     apkFiles: '**/*.apk' 
#     apksign: true
#     apksignerKeystoreFile: 'autosendmsg.jks'
#     apksignerKeystorePassword: 'abcd@1234'
#     apksignerKeystoreAlias: 'key0'
#     apksignerKeyPassword: 'abcd@1234'

# - task: UniversalPackages@0
#   displayName: Universal Publish
#   inputs:
#     command: publish
#     publishDirectory: '$(Agent.BuildDirectory)\s\platforms\android\app\build\outputs\apk\release'
#     vstsFeedPublish: 'test azure/testartifacts'
#     vstsFeedPackagePublish: 'autosendmsg'
#     packagePublishDescription: 'test package'

# - task: CopyFiles@2
#   inputs:
#     sourceFolder: '$(Agent.BuildDirectory)\s\platforms\android\app\build\outputs\apk\release'
#     contents: '**' 
#     targetFolder: 'D:\android\package'
#     OverWrite: true

# - task: PublishBuildArtifacts@1
#   inputs:
#     pathToPublish: 'D:\android\package'
#     artifactName: 'autosendmsg'



# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: 'D:\a\1\s\platforms\android\app\build\outputs\apk\release\app-release-unsigned.apk'
#     artifactType: 'pipeline'
#     artifactName: 'autosendmsg'